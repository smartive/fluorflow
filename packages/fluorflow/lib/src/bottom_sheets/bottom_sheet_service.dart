import 'dart:ui';

import 'package:get/get.dart';

import '../overlays/overlay.dart';

/// A service for showing and closing bottom sheets.
/// Works with [FluorFlowOverlay] instances.
class BottomSheetService {
  /// Returns whether a bottom sheet is currently open.
  bool get isDialogOpen => Get.isBottomSheetOpen ?? false;

  /// Shows a bottom sheet and returns a future with the result.
  /// Use the convenience methods generated by the generator to show a bottom sheet
  /// and return the result in an easy way.
  ///
  /// - [sheet] marks the sheet that is opened.
  /// - [barrierColor] configures the color that is used behind the bottom sheet
  ///   if a portion of the screen is still visible.
  /// - [fullscreen] configures whether the bottom sheet should take up the entire screen. If true, the [barrierColor]
  ///   is still applied, but may not be visible.
  /// - [draggable] defines if the bottom sheet can be closed by dragging it down towards the bottom.
  /// - [ignoreSafeArea] allows the bottom sheet to ignore [SafeArea] widgets and always uses the whole
  ///   screen if possible. This is most likely used in combination with [fullscreen].
  Future<TResult?> showBottomSheet<TResult, TSheet extends FluorFlowOverlay>(
    TSheet sheet, {
    Color barrierColor = const Color(0x80000000),
    bool fullscreen = false,
    bool draggable = true,
    bool ignoreSafeArea = true,
  }) =>
      Get.bottomSheet(
        sheet,
        barrierColor: barrierColor,
        isScrollControlled: fullscreen,
        enableDrag: draggable,
        ignoreSafeArea: ignoreSafeArea,
      );

  /// Closes the currently open bottom sheet.
  void closeSheet<T>({bool? confirmed, T? result}) =>
      Get.back(result: (confirmed, result));
}
